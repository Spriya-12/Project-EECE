module dual_port_ram (
    input clk,
    input [3:0] addr_a, addr_b,   // 4-bit addresses
    input [7:0] data_in_a, data_in_b,   // 8-bit data inputs
    input we_a, we_b,             // Write enable for each port
    output reg [7:0] data_out_a, data_out_b // 8-bit data outputs
);

    // Declare a 16x8-bit RAM (16 memory locations, each 8 bits wide)
    reg [7:0] ram [15:0];

    // Clock-sensitive block
    always @(posedge clk) begin
        // Port A operation: Write or Read
        if (we_a) begin
            ram[addr_a] <= 8'b11001100;   // Changed data_in_a to fixed value 11001100
        end else begin
            data_out_a <= ram[addr_a];   // Read data from memory at address addr_a
        end

        // Port B operation: Write or Read
        if (we_b) begin
            ram[addr_b] <= 8'b00110011;   // Changed data_in_b to fixed value 00110011
        end else begin
            data_out_b <= ram[addr_b];   // Read data from memory at address addr_b
        end
    end
endmodule

